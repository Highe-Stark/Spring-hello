<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- Interceptor have to run before withAop function; Install into NameMatchMethodPointcutAdvisor -->
    <bean id="aopMethodBeforeInterceptor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice">
            <bean class="com.stark.aop.MethodBeforeInterceptor"/>
        </property>
        <property name="mappedName" value="withAop"></property>
    </bean>

    <!-- Interceptor running after withAop(). Install into NameMatchMethodPointcutAdvisor -->
    <bean id="aopMethodAfterInterceptor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice">
            <bean class="com.stark.aop.MethodAfterInterceptor"/>
        </property>
        <property name="mappedName" value="withAop"></property>
    </bean>

    <!-- Interceptor running after Exception thrown. Install into NameMethodPointcutAdvisor -->
    <bean id="aopThrowsInterceptor"
          class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice">
            <bean class="com.stark.aop.ThrowsInterceptor"></bean>
        </property>
        <property name="mappedName" value="withAop"></property>
    </bean>

    <!-- Service object. Install into ProxyFactoryBean object -->
    <bean id="aopService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!-- Interceptor -->
        <property name="interceptorNames">
            <list>
                <value>aopMethodBeforeInterceptor</value>
                <value>aopMethodAfterInterceptor</value>
                <value>aopThrowsInterceptor</value>
            </list>
        </property>
        <property name="target">
            <bean class="com.stark.aop.AopServiceImpl">
                <property name="name" value=""></property>
            </bean>
        </property>
    </bean>

    <!--
    <bean id="setterAndAbsquatulateAdvisor"
        class="org.springframework.aop.support.RegexMethodPointcutAdvisor">
        // pointcut
        <property name="interceptor">   // interceptor
            <ref bean="beanNameOfAopAllianceInterceptor"/>
        </property>
        <property name="patterns">    // regex expression configuration pointcut
            <list>
                <value>.*get.*</value>
                <value>.*absquatulate</value>
            </list>
        </property>
    </bean>
    -->

    <!--Interceptor object-->
    <bean id="methodBeforeAdviceImpl" class="com.stark.hello.MethodBeforeAdviceImpl">
    </bean>

    <!--Configure Interceptor Object with spring component-->
    <bean id="theAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
        <property name="advice">
            <ref bean="methodBeforeAdviceImpl"/>  <!-- Interceptor Object -->
            <!-- ref local="methodBeforeAdviceImpl /-->
        </property>
        <property name="mappedName" value="*"></property> <!-- intercept all method -->
    </bean>

    <bean id="dao" class="com.stark.hello.DaoImpl"/>
    <!--DAO Object -->
    <bean id="serviceImpl" class="com.stark.hello.ServiceImpl"><!--Service Object-->
        <property name="dao" ref="dao"></property><!--set DAO properties-->
    </bean>

    <bean id="service"
          class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interceptorNames" value="theAdvisor"></property>
        <!-- Interceptor -->
        <property name="target">  <!-- object intercepted -->
            <ref bean="serviceImpl"/>
        </property>
    </bean>
</beans>

